@charset "UTF-8";
/*----------------------------------------------------------------------------*\
    INPUT.CONTROL
    Friendlier HTML form controls with a little CSS magic.
\*----------------------------------------------------------------------------*/

/*  Variables
\*----------------------------------------------------------------------------*/

$control-width: 1.5em !default;
$control-space: $control-width*1.5 !default;
$control-line-height: $control-space !default;
$control-border-width: 1px !default;

// Colors
$control-label-color: $black !default;
$control-border-color: $black !default;
$control-background-color: $white !default;
$control-focus-color: $black !default;
$control-error-color: $black !default;
$control-disabled-color: lightgray !default;



/*  Component
\*----------------------------------------------------------------------------*/

.control {
    position: relative;
    display: inline-block;
    padding-left: $control-space;
    color: $control-label-color;
    line-height: $control-line-height;
    cursor: pointer;
}

/**
 * Actual input, needs to be hidden but not removed from rendering
 */
.control__input {
    position: absolute;
    opacity: 0;
    z-index: -1;
}



/*  Indicator
    Visual representation of the input
\*----------------------------------------------------------------------------*/

.control__indicator {
    position: absolute;
    top: $control-line-height/2;
    transform: translateY(-50%);
    left: 0;
    display: block;
    width: $control-width;
    height: $control-width;
    line-height: $control-width;
    border: $control-border-width solid $control-border-color;
    text-align: center;
    background-color: $control-background-color;
    user-select: none;
}



/*  States
\*----------------------------------------------------------------------------*/

/**
 * Checked/active
 */
.control.is-checked .control__indicator,
.control__input:checked ~ .control__indicator,
.control__input:active ~ .control__indicator {
    color: $control-background-color;
    border-color: $control-focus-color;
}


/**
 * Focus
 */
.control__input:focus,
.control.is-checked .control__input:focus,
.control__input:checked:focus,
.control__input:active:focus {
    ~ .control__indicator {
        border-color: $control-focus-color;
    }
}


/**
 * Disabled
 */
.control.is-disabled {
    cursor: not-allowed;
}

.control.is-disabled .control__indicator,
.control__input:disabled ~ .control__indicator,
.control.is-checked.is-disabled .control__indicator,
.control .control__input:checked:disabled ~ .control__indicator {
    border-color: $control-disabled-color;
    background-color: $control-disabled-color;
    cursor: not-allowed;
}

.control.is-disabled .control__label,
.control__input:disabled ~ .control__label {
    color: $control-disabled-color;
    cursor: not-allowed;
}



/*  Modifiers
\*----------------------------------------------------------------------------*/

/**
 * Checkbox
 */
.control--checkbox {
    .control__indicator {

        &::after {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 0;
            height: 0;
            content: " ";
            background-color: transparent;
        }
    }

    &.is-checked .control__indicator,
    .control__input:checked ~ .control__indicator {
        border-color: $control-focus-color;

        &::after {
            background-color: $control-focus-color;
            width: 80%;
            height: 80%;
        }
    }
}



/**
 * Radio
 */
.control--radio {
    .control__indicator {
        border-radius: 50%;

        &::after {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 0;
            height: 0;
            content: " ";
            border-radius: 50%;
            background-color: transparent;
        }
    }

    &.is-checked .control__indicator,
    .control__input:checked ~ .control__indicator {
        border-color: $control-focus-color;

        &::after {
            background-color: $control-focus-color;
            width: 80%;
            height: 80%;
        }
    }
}
